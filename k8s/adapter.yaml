---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${NAMESPACE}
  name: chaos-adapter
  labels:
    app: chaos-adapter
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: chaos-adapter
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: chaos-adapter
      annotations:
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/includeInboundPorts: "${PROXY_INBOUND_PORTS}"
    spec:
      containers:
        - name: adapter
          image: ${IMAGE}
          ports:
            - containerPort: 4080
              name: grpc
              protocol: TCP
            - containerPort: 8080
              name: http-management
              protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 500Mi
          env:
            - name: foo
              value: v6
          readinessProbe:
            tcpSocket:
              port: 4080
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  namespace: ${NAMESPACE}
  name: chaos-adapter
  labels:
    app: chaos-adapter
  annotations:
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: grpc
      port: 4080
      protocol: TCP
  selector:
    app: chaos-adapter
---
apiVersion: v1
kind: Service
metadata:
  namespace: ${NAMESPACE}
  name: chaos-adapter-headless
  labels:
    app: chaos-adapter
spec:
  clusterIP: None
  ports:
    - name: headless-grpc
      port: 1337 # fake port since we are only doing DNS resolution with this, the custom mixer template needs to use chaos-adapter-headless.${NAMESPACE}:4080 (i.e the real grpc port)
      protocol: TCP
      targetPort: 1337
  selector:
    app: chaos-adapter
  type: ClusterIP
